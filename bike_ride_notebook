{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0a00d231",
   "metadata": {
    "_cell_guid": "4023a4b0-49b3-47ad-9436-2f1901de2ded",
    "_uuid": "ca04b8bc-596b-429f-a649-3b9703126a6e",
    "jupyter": {
     "outputs_hidden": false
    },
    "papermill": {
     "duration": 0.002513,
     "end_time": "2022-08-02T03:32:00.503181",
     "exception": false,
     "start_time": "2022-08-02T03:32:00.500668",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "install.packages(\"lubridate\")\n",
    "library(tidyverse)\n",
    "library(readxl)\n",
    "library(lubridate)\n",
    "\n",
    "\n",
    "#importing data into environment\n",
    "\"2021_june_bike_data\" <-\n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_06_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2021_july_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_07_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2021_aug_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_08_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2021_sept_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_09_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2021_oct_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_10_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2021_nov_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_11_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2021_dec_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2021_12_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2022_jan_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2022_01_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2022_feb_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2022_02_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2022_mar_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2022_03_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2022_apr_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2022_04_bike_ride_data.xlsx\")\n",
    "\n",
    "\"2022_may_bike_data\" <- \n",
    "  read_excel(\"C:/Users/kyleb/Data Analysis Course/Case Study/Bikes Excel Workbooks/2022_05_bike_ride_data.xlsx\")\n",
    "\n",
    "\n",
    "#combining months into full year\n",
    "full_year_data <- bind_rows(`2021_aug_bike_data`, `2021_dec_bike_data`, `2021_july_bike_data`, `2021_june_bike_data`, \n",
    "                            `2021_nov_bike_data`, `2021_oct_bike_data`, `2021_sept_bike_data`, `2022_apr_bike_data`,\n",
    "                            `2022_feb_bike_data`, `2022_jan_bike_data`, `2022_mar_bike_data`, `2022_may_bike_data`)\n",
    "\n",
    "#adding date, day, month, and year columns\n",
    "full_year_data$date <- as.Date(full_year_data$started_at) #The default format is yyyy-mm-dd\n",
    "full_year_data$month <- format(as.Date(full_year_data$date), \"%m\")\n",
    "full_year_data$day <- format(as.Date(full_year_data$date), \"%d\")\n",
    "full_year_data$year <- format(as.Date(full_year_data$date), \"%Y\")\n",
    "full_year_data$day_of_week <- format(as.Date(full_year_data$date), \"%A\")\n",
    "\n",
    "#creating ride_length column\n",
    "full_year_data$ride_length <- difftime(full_year_data$ended_at,full_year_data$started_at)\n",
    "\n",
    "#changing \"ride_length\" from factor to numeric\n",
    "is.factor(full_year_data$ride_length)\n",
    "full_year_data$ride_length <- as.numeric(as.character(full_year_data$ride_length))\n",
    "is.numeric(full_year_data$ride_length)\n",
    "\n",
    "\n",
    "#cleaning of data, removing quality check and negative ride_length\n",
    "full_year_v1_5 <-full_year_data[!(full_year_data$start_station_name == \"HQ QR\" | full_year_data$ride_length<0),]\n",
    "\n",
    "#removing NA values from ride_length\n",
    "full_year_v2 <- drop_na(full_year_v1_5, ride_length)\n",
    "\n",
    "  \n",
    "##analyzing of data\n",
    "summary(full_year_v2$ride_length)\n",
    "\n",
    "#comparing member and casual riders\n",
    "aggregate(full_year_v2$ride_length ~ full_year_v2$member_casual, FUN = mean)\n",
    "aggregate(full_year_v2$ride_length ~ full_year_v2$member_casual, FUN = median)\n",
    "aggregate(full_year_v2$ride_length ~ full_year_v2$member_casual, FUN = max)\n",
    "aggregate(full_year_v2$ride_length ~ full_year_v2$member_casual, FUN = min)\n",
    "\n",
    "#putting days of week in correct order\n",
    "full_year_v2$day_of_week <- ordered(full_year_v2$day_of_week, levels=c(\n",
    "  \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"))\n",
    "\n",
    "#average ride time by day for members and casuals\n",
    "aggregate(full_year_v2$ride_length ~ full_year_v2$member_casual + full_year_v2$day_of_week, FUN = mean)\n",
    "\n",
    "#looking at rider data by type and weekday. Number of rides is thousands of rides\n",
    "full_year_v2 %>%  \n",
    "  mutate(weekday = wday(started_at, label = TRUE))  %>%   #creates weekday field using wday()\n",
    "  group_by(member_casual, weekday)  %>%   #groups by user type and weekday\n",
    "  summarize(number_of_rides = n(),\t\t#calculates the number of rides and average duration \n",
    "            average_duration = mean(ride_length)) %>%    # calculates the average duration\n",
    "  arrange(member_casual, weekday)\t%>% # sorts\n",
    "  ggplot(aes(x = weekday, y = number_of_rides/1000, fill = member_casual)) +\n",
    "  geom_col(position = \"dodge\") + #creating plot for total number of rides\n",
    "  xlab(\"Day of Week\") + #renaming x axis\n",
    "  ylab(\"Thousands of Rides\")+ #renaming y\n",
    "  ggtitle(\"Number of Rides per Day by Member or Casual Riders\") #adding title\n",
    "\n",
    "  \n",
    "  \n",
    "full_year_v2 %>%  \n",
    "  mutate(weekday = wday(started_at, label = TRUE))  %>%   #creates weekday field using wday()\n",
    "  group_by(member_casual, weekday)  %>%   #groups by user type and weekday\n",
    "  summarize(number_of_rides = n(),\t\t#calculates the number of rides and average duration \n",
    "            average_duration = mean(ride_length)) %>%    # calculates the average duration\n",
    "  arrange(member_casual, weekday)\t%>% # sorts\n",
    "  ggplot(aes(x = weekday, y = average_duration/60, fill = member_casual)) +\n",
    "  geom_col(position = \"dodge\") + #creating visual for average duration\n",
    "  xlab(\"Day of Week\") +\n",
    "  ylab(\"Average Ride Time in Minutes\") +\n",
    "  ggtitle(\"Average Ride Time by Member and Casual Riders\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "ir"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "4.0.5"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 4.202077,
   "end_time": "2022-08-02T03:32:00.629118",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2022-08-02T03:31:56.427041",
   "version": "2.3.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
